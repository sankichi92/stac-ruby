var search_data = {"index":{"searchIndex":["stac","asset","catalog","collection","commonmetadata","defaulthttpclient","error","extent","spatial","temporal","httperror","item","link","objectresolver","properties","provider","stacobject","typeerror","unknownurischemeerror","absolute_href()","add_link()","all_items()","children()","collection()","collection=()","collections()","constellation()","constellation=()","created()","created=()","datetime()","datetime_range()","datetime_range=()","default_http_client()","description()","description=()","end_datetime()","end_datetime=()","find_child()","find_item()","from_file()","from_hash()","from_hash()","from_hash()","from_hash()","from_hash()","from_hash()","from_hash()","from_hash()","from_hash()","from_hash()","from_url()","get()","gsd()","gsd=()","instruments()","instruments=()","items()","license()","license=()","mission()","mission=()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","platform()","platform=()","providers()","providers=()","resolve()","self_href()","self_href=()","start_datetime()","start_datetime=()","target()","title()","title=()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_json()","type()","updated()","updated=()","changelog","readme"],"longSearchIndex":["stac","stac::asset","stac::catalog","stac::collection","stac::commonmetadata","stac::defaulthttpclient","stac::error","stac::extent","stac::extent::spatial","stac::extent::temporal","stac::httperror","stac::item","stac::link","stac::objectresolver","stac::properties","stac::provider","stac::stacobject","stac::typeerror","stac::unknownurischemeerror","stac::link#absolute_href()","stac::stacobject#add_link()","stac::catalog#all_items()","stac::catalog#children()","stac::item#collection()","stac::item#collection=()","stac::catalog#collections()","stac::commonmetadata#constellation()","stac::commonmetadata#constellation=()","stac::commonmetadata#created()","stac::commonmetadata#created=()","stac::item#datetime()","stac::commonmetadata#datetime_range()","stac::commonmetadata#datetime_range=()","stac::objectresolver::default_http_client()","stac::commonmetadata#description()","stac::commonmetadata#description=()","stac::commonmetadata#end_datetime()","stac::commonmetadata#end_datetime=()","stac::catalog#find_child()","stac::catalog#find_item()","stac::from_file()","stac::asset::from_hash()","stac::collection::from_hash()","stac::extent::from_hash()","stac::extent::spatial::from_hash()","stac::extent::temporal::from_hash()","stac::item::from_hash()","stac::link::from_hash()","stac::properties::from_hash()","stac::provider::from_hash()","stac::stacobject::from_hash()","stac::from_url()","stac::defaulthttpclient#get()","stac::commonmetadata#gsd()","stac::commonmetadata#gsd=()","stac::commonmetadata#instruments()","stac::commonmetadata#instruments=()","stac::catalog#items()","stac::commonmetadata#license()","stac::commonmetadata#license=()","stac::commonmetadata#mission()","stac::commonmetadata#mission=()","stac::asset::new()","stac::catalog::new()","stac::collection::new()","stac::defaulthttpclient::new()","stac::extent::new()","stac::extent::spatial::new()","stac::extent::temporal::new()","stac::item::new()","stac::link::new()","stac::objectresolver::new()","stac::properties::new()","stac::provider::new()","stac::stacobject::new()","stac::commonmetadata#platform()","stac::commonmetadata#platform=()","stac::commonmetadata#providers()","stac::commonmetadata#providers=()","stac::objectresolver#resolve()","stac::stacobject#self_href()","stac::stacobject#self_href=()","stac::commonmetadata#start_datetime()","stac::commonmetadata#start_datetime=()","stac::link#target()","stac::commonmetadata#title()","stac::commonmetadata#title=()","stac::asset#to_h()","stac::catalog#to_h()","stac::collection#to_h()","stac::extent#to_h()","stac::extent::spatial#to_h()","stac::extent::temporal#to_h()","stac::item#to_h()","stac::link#to_h()","stac::properties#to_h()","stac::provider#to_h()","stac::stacobject#to_h()","stac::stacobject#to_json()","stac::stacobject#type()","stac::commonmetadata#updated()","stac::commonmetadata#updated=()","",""],"info":[["STAC","","STAC.html","","<p>Gem namespace.\n<p>Provides some utility methods.\n"],["STAC::Asset","","STAC/Asset.html","","<p>Represents STAC asset object, which contains a link to data associated with an Item or Collection that …\n"],["STAC::Catalog","","STAC/Catalog.html","","<p>Represents STAC catalog.\n<p>STAC Catalog Specification: github.com/radiantearth/stac-spec/tree/master/catalog-spec …\n"],["STAC::Collection","","STAC/Collection.html","","<p>Represents STAC collection.\n<p>STAC Collection Specification: github.com/radiantearth/stac-spec/tree/master/collection-spec …\n"],["STAC::CommonMetadata","","STAC/CommonMetadata.html","","<p>Provides read/write methods for STAC Common Metadata.\n<p>These methods are shorthand accessors of #extra …\n"],["STAC::DefaultHTTPClient","","STAC/DefaultHTTPClient.html","","<p>Simple HTTP Client using OpenURI.\n"],["STAC::Error","","STAC/Error.html","","<p>Base error class for this gem.\n"],["STAC::Extent","","STAC/Extent.html","","<p>Represents STAC extent object, which describes the spatio-temporal extents of a Collection.\n<p>Specification: …\n"],["STAC::Extent::Spatial","","STAC/Extent/Spatial.html","","<p>Describes the spatial extents of a Collection\n"],["STAC::Extent::Temporal","","STAC/Extent/Temporal.html","","<p>Describes the temporal extents of a Collection.\n"],["STAC::HTTPError","","STAC/HTTPError.html","","<p>Raised when a HTTP request failed.\n"],["STAC::Item","","STAC/Item.html","","<p>Represents STAC item.\n<p>STAC Item Specification: github.com/radiantearth/stac-spec/tree/master/item-spec …\n"],["STAC::Link","","STAC/Link.html","","<p>Represents STAC link object, which describes a relationship with another entity.\n"],["STAC::ObjectResolver","","STAC/ObjectResolver.html","","<p>Resolves a STAC object from a URL.\n"],["STAC::Properties","","STAC/Properties.html","","<p>Represents STAC properties object, which is additional metadata for Item.\n<p>Specification: github.com/radiantearth/stac-spec/blob/master/item-spec/item-spec.md#properties-object …\n"],["STAC::Provider","","STAC/Provider.html","","<p>Represents STAC provider object, which provides information about a provider.\n<p>Specicication: github.com/radiantearth/stac-spec/blob/master/collection-spec/collection-spec.md#provider-object …\n"],["STAC::STACObject","","STAC/STACObject.html","","<p>Base class for STAC objects (i.e. Catalog, Collection and Item).\n"],["STAC::TypeError","","STAC/TypeError.html","","<p>Raised when unexpected “type” field was given.\n"],["STAC::UnknownURISchemeError","","STAC/UnknownURISchemeError.html","","<p>Raised when URL with unsupported scheme was given.\n"],["absolute_href","STAC::Link","STAC/Link.html#method-i-absolute_href","()","<p>Returns the absolute HREF for this link.\n<p>When it could not assemble the absolute HREF, it returns nil. …\n"],["add_link","STAC::STACObject","STAC/STACObject.html#method-i-add_link","(link)","<p>Adds a link with setting Link#owner as self.\n"],["all_items","STAC::Catalog","STAC/Catalog.html#method-i-all_items","()","<p>Returns all items from this catalog and its child catalogs/collections recursively.\n"],["children","STAC::Catalog","STAC/Catalog.html#method-i-children","()","<p>Returns catalog/collection objects from rel=“child” links of this catalog.\n"],["collection","STAC::Item","STAC/Item.html#method-i-collection","()","<p>Returns a rel=“collection” link as a collection object if it exists.\n"],["collection=","STAC::Item","STAC/Item.html#method-i-collection-3D","(collection)","<p>Overwrites rel=“collection” link and #collection_id attribute.\n"],["collections","STAC::Catalog","STAC/Catalog.html#method-i-collections","()","<p>Filters only collections from #children.\n"],["constellation","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-constellation","()",""],["constellation=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-constellation-3D","(str)",""],["created","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-created","()",""],["created=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-created-3D","(time)",""],["datetime","STAC::Item","STAC/Item.html#method-i-datetime","()","<p>Returns datetime from #properties.\n"],["datetime_range","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-datetime_range","()","<p>Returns a range from #start_datetime to #end_datetime.\n"],["datetime_range=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-datetime_range-3D","(time_range)","<p>Sets #start_datetime and #end_datetime by the given range.\n"],["default_http_client","STAC::ObjectResolver","STAC/ObjectResolver.html#method-c-default_http_client","()","<p>Returns the default HTTP client.\n"],["description","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-description","()",""],["description=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-description-3D","(str)",""],["end_datetime","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-end_datetime","()",""],["end_datetime=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-end_datetime-3D","(time)",""],["find_child","STAC::Catalog","STAC/Catalog.html#method-i-find_child","(id, recursive: false)","<p>Returns the child catalog/collection with the given ID if it exists.\n<p>With option ‘recusive: true`, it …\n"],["find_item","STAC::Catalog","STAC/Catalog.html#method-i-find_item","(id, recursive: false)","<p>Returns the item with the given ID if it exists.\n<p>With option ‘recursive: true`, it will traverse all child …\n"],["from_file","STAC","STAC.html#method-c-from_file","(path)","<p>Returns a STAC object resolved from the given file path.\n"],["from_hash","STAC::Asset","STAC/Asset.html#method-c-from_hash","(hash)","<p>Deserializes an Asset from a Hash.\n"],["from_hash","STAC::Collection","STAC/Collection.html#method-c-from_hash","(hash)",""],["from_hash","STAC::Extent","STAC/Extent.html#method-c-from_hash","(hash)","<p>Deserializes an Extent from a Hash.\n"],["from_hash","STAC::Extent::Spatial","STAC/Extent/Spatial.html#method-c-from_hash","(hash)","<p>Deserializes a Spatial from a Hash.\n"],["from_hash","STAC::Extent::Temporal","STAC/Extent/Temporal.html#method-c-from_hash","(hash)","<p>Deserializes a Temporal from a Hash.\n"],["from_hash","STAC::Item","STAC/Item.html#method-c-from_hash","(hash)",""],["from_hash","STAC::Link","STAC/Link.html#method-c-from_hash","(hash)","<p>Deserializes a Link from a Hash.\n"],["from_hash","STAC::Properties","STAC/Properties.html#method-c-from_hash","(hash)","<p>Deserializes a Properties from a Hash.\n"],["from_hash","STAC::Provider","STAC/Provider.html#method-c-from_hash","(hash)","<p>Deserializes a Provider from a Hash.\n"],["from_hash","STAC::STACObject","STAC/STACObject.html#method-c-from_hash","(hash)","<p>Base method to deserialize shared fields from a Hash.\n<p>Raises ArgumentError when any required fields are …\n"],["from_url","STAC","STAC.html#method-c-from_url","(url, resolver: ObjectResolver.new)","<p>Returns a STAC object resolved from the given URL.\n<p>When the resolved object does not have rel=“self” …\n"],["get","STAC::DefaultHTTPClient","STAC/DefaultHTTPClient.html#method-i-get","(uri)","<p>Makes a HTTP request and returns the response body as String.\n<p>Raises STAC::HTTPError when the response …\n"],["gsd","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-gsd","()",""],["gsd=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-gsd-3D","(num)",""],["instruments","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-instruments","()",""],["instruments=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-instruments-3D","(arr)",""],["items","STAC::Catalog","STAC/Catalog.html#method-i-items","()","<p>Returns item objects from rel=“item” links of this catalog.\n"],["license","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-license","()",""],["license=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-license-3D","(str)",""],["mission","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-mission","()",""],["mission=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-mission-3D","(str)",""],["new","STAC::Asset","STAC/Asset.html#method-c-new","(href:, title: nil, description: nil, type: nil, roles: nil, **extra)",""],["new","STAC::Catalog","STAC/Catalog.html#method-c-new","(id:, description:, links:, title: nil, stac_extensions: nil, **extra)",""],["new","STAC::Collection","STAC/Collection.html#method-c-new","( id:, description:, links:, license:, extent:, title: nil, keywords: nil, providers: nil, summaries: nil, assets: nil, stac_extensions: nil, **extra )",""],["new","STAC::DefaultHTTPClient","STAC/DefaultHTTPClient.html#method-c-new","(options = { 'User-Agent' => \"stac-ruby v#{VERSION}\" })",""],["new","STAC::Extent","STAC/Extent.html#method-c-new","(spatial:, temporal:, **extra)",""],["new","STAC::Extent::Spatial","STAC/Extent/Spatial.html#method-c-new","(bbox:, **extra)",""],["new","STAC::Extent::Temporal","STAC/Extent/Temporal.html#method-c-new","(interval:, **extra)",""],["new","STAC::Item","STAC/Item.html#method-c-new","( id:, geometry:, properties:, links:, assets:, bbox: nil, collection: nil, stac_extensions: nil, **extra )",""],["new","STAC::Link","STAC/Link.html#method-c-new","(rel:, href:, type: nil, title: nil, **extra)",""],["new","STAC::ObjectResolver","STAC/ObjectResolver.html#method-c-new","(http_client: self.class.default_http_client)",""],["new","STAC::Properties","STAC/Properties.html#method-c-new","(datetime:, **extra)",""],["new","STAC::Provider","STAC/Provider.html#method-c-new","(name:, description: nil, roles: nil, url: nil, **extra)",""],["new","STAC::STACObject","STAC/STACObject.html#method-c-new","(id:, links:, stac_extensions: nil, **extra)",""],["platform","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-platform","()",""],["platform=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-platform-3D","(str)",""],["providers","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-providers","()",""],["providers=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-providers-3D","(arr)",""],["resolve","STAC::ObjectResolver","STAC/ObjectResolver.html#method-i-resolve","(url)","<p>Reads a JSON from the given URL and returns a STAC object resolved from it.\n<p>Supports the following URL …\n"],["self_href","STAC::STACObject","STAC/STACObject.html#method-i-self_href","()","<p>Reterns HREF of the rel=“self” link.\n"],["self_href=","STAC::STACObject","STAC/STACObject.html#method-i-self_href-3D","(absolute_href)","<p>Adds a link with the give HREF as rel=“self”.\n<p>When any ref=“self” links already exist, …\n"],["start_datetime","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-start_datetime","()",""],["start_datetime=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-start_datetime-3D","(time)",""],["target","STAC::Link","STAC/Link.html#method-i-target","()","<p>Returns a STAC object resolved from HREF.\n<p>When it could not assemble the absolute HREF, it returns nil. …\n"],["title","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-title","()",""],["title=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-title-3D","(str)",""],["to_h","STAC::Asset","STAC/Asset.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Catalog","STAC/Catalog.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Collection","STAC/Collection.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Extent","STAC/Extent.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Extent::Spatial","STAC/Extent/Spatial.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Extent::Temporal","STAC/Extent/Temporal.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Item","STAC/Item.html#method-i-to_h","()",""],["to_h","STAC::Link","STAC/Link.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Properties","STAC/Properties.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::Provider","STAC/Provider.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_h","STAC::STACObject","STAC/STACObject.html#method-i-to_h","()","<p>Serializes self to a Hash.\n"],["to_json","STAC::STACObject","STAC/STACObject.html#method-i-to_json","(...)","<p>Serializes self to a JSON string.\n"],["type","STAC::STACObject","STAC/STACObject.html#method-i-type","()",""],["updated","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-updated","()",""],["updated=","STAC::CommonMetadata","STAC/CommonMetadata.html#method-i-updated-3D","(time)",""],["CHANGELOG","","CHANGELOG_md.html","","<p>[Unreleased]\n<p>[0.1.0] - 2022-10-09\n<p>Initial release\n"],["README","","README_md.html","","<p>stac-ruby\n<p>A Ruby library for working with SpatioTemporal Asset Catalog (STAC).\n<p>This gem’s implementation …\n"]]}}
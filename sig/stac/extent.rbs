module STAC
  class Extent
    include HashLike

    def self.from_hash: (Hash[String, untyped] hash) -> Extent

    attr_accessor spatial: Spatial
    attr_accessor temporal: Temporal

    def initialize: (spatial: Spatial, temporal: Temporal, **untyped) -> void
    
    class Spatial
      include HashLike

      def self.from_hash: (Hash[String, untyped] hash) -> Spatial

      attr_accessor bbox: Array[Array[Numeric]]

      def initialize: (bbox: Array[Array[Numeric]], **untyped) -> void
    end

    class Temporal
      include HashLike

      def self.from_hash: (Hash[String, untyped] hash) -> Temporal

      attr_accessor interval: Array[Array[String?]]

      def initialize: (interval: Array[Array[String?]], **untyped) -> void
    end
  end
end

module STAC
  class Catalog < STACObject
    def self.from_hash: (Hash[String, untyped] hash) -> Catalog

    attr_accessor description: String
    attr_accessor title: String?
    
    def initialize: (
      id: String, description: String, links: Array[Link], ?title: String?, ?stac_extensions: Array[String]?, **untyped
    ) -> void

    def to_h: -> Hash[String, untyped]
    def children: -> Enumerator::Lazy[Catalog | Collection, void]
    def collections: -> Enumerator::Lazy[Collection, void]
    def find_child: (String) -> (Catalog | Collection | nil)
    def items: -> Enumerator::Lazy[Item, void]
  end
end

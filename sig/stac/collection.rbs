module STAC
  class Collection < Catalog
    def self.from_hash: (Hash[String, untyped] hash) -> Collection

    attr_accessor license: String
    attr_accessor extent: Extent
    attr_accessor keywords: Array[String]?
    attr_accessor providers: Array[Provider]?
    attr_accessor summaries: Hash[String, untyped]?
    attr_reader assets: Hash[String, Asset]?

    def initialize: (
      id: String,
      description: String,
      links: Array[Hash[String, String]],
      license: String,
      extent: Extent,
      ?title: String?,
      ?keywords: Array[String]?,
      ?providers: Array[Provider]?,
      ?summaries: Hash[String, untyped]?,
      ?assets: Hash[String, Asset]?,
      ?stac_extensions: Array[String],
      **untyped
    ) -> void

    def add_asset: (
      key: String,
      href: String,
      ?title: String?,
      ?description: String?,
      ?type: String?,
      ?roles: Array[String]?,
      **untyped
    ) -> void
  end
end
